{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/components/appbar.js","src/js/components/index.js","src/js/components/sectionTabs.js","src/js/index.js","src/js/polyfill.js","src/js/scrollHorizontal.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const btns = Array.from(document.querySelectorAll('[data-toggle=\"appbar\"]'));\r\n\r\nbtns.forEach(btn => \r\n  btn.addEventListener('click', function() {\r\n    this.closest('.appbar').classList.toggle('in')\r\n  })\r\n)","import './appbar'\r\nimport './sectionTabs'","import scrollHorizontal from '../scrollHorizontal';\r\n\r\nconst tabNavs = Array.from(document.querySelectorAll('.section-tabs .nav > li > a'))\r\nconst sectionTabs = Array.from(document.querySelectorAll('.section-tabs'));\r\nconst sectionsActive = Array.from(\r\n  document.querySelectorAll('.section-tabs .section.active')\r\n)\r\n\r\ntabNavs.forEach(nav =>\r\n  nav.addEventListener('click', function(e) {\r\n    e.preventDefault();\r\n    const sectionTabEl = this.closest('.section-tabs');\r\n    const navEl = this.closest('.nav');\r\n    const sectionId = this.getAttribute('href');\r\n    const parent = this.parentNode;\r\n    const isActive = parent.classList.contains('active');\r\n    const sectionEl = sectionTabEl.querySelector(sectionId);\r\n\r\n    if (isActive) return;\r\n\r\n    sectionTabEl.querySelector('.content .active').classList.remove('active');\r\n    navEl.querySelector('.active').classList.remove('active');\r\n\r\n    sectionEl.classList.add('active');\r\n    parent.classList.add('active');\r\n    scrollToSectionActive(sectionEl);\r\n  })\r\n);\r\n\r\nwindow.onload = function() {\r\n  sectionsActive.forEach(scrollToSectionActive);\r\n  sectionTabs.forEach(scrollHorizontal);\r\n}\r\n\r\nfunction scrollToSectionActive(sectionEl) {\r\n  const contentEl = sectionEl.closest('.content');\r\n\r\n  if ('scrollTo' in window) {\r\n    contentEl.scrollTo({\r\n      'behavior': 'smooth',\r\n      'left': sectionEl.offsetLeft\r\n    })\r\n  } else {\r\n    contentEl.scrollLeft = sectionEl.offsetLeft;\r\n  }\r\n}","import './polyfill'\r\n\r\nimport './components'","// Array.from\r\nif (!Array.from) {\r\n  Array.from = (function() {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function(fn) {\r\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n    };\r\n    var toInteger = function(value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) {\r\n        return 0;\r\n      }\r\n      if (number === 0 || !isFinite(number)) {\r\n        return number;\r\n      }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function(value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // La propriété length de la méthode vaut 1.\r\n    return function from(arrayLike /*, mapFn, thisArg */) {\r\n      // 1. Soit C, la valeur this\r\n      var C = this;\r\n\r\n      // 2. Soit items le ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError(\r\n          'Array.from doit utiliser un objet semblable à un tableau - null ou undefined ne peuvent pas être utilisés'\r\n        );\r\n      }\r\n\r\n      // 4. Si mapfn est undefined, le mapping sera false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== 'undefined') {\r\n        // 5. sinon\r\n        // 5. a. si IsCallable(mapfn) est false, on lève une TypeError.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError('Array.from: lorsqu il est utilisé le deuxième argument doit être une fonction');\r\n        }\r\n\r\n        // 5. b. si thisArg a été fourni, T sera thisArg ; sinon T sera undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Soit lenValue pour Get(items, \"length\").\r\n      // 11. Soit len pour ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. Si IsConstructor(C) vaut true, alors\r\n      // 13. a. Soit A le résultat de l'appel à la méthode interne [[Construct]] avec une liste en argument qui contient l'élément len.\r\n      // 14. a. Sinon, soit A le résultat de ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Soit k égal à 0.\r\n      var k = 0; // 17. On répète tant que k < len…\r\n      var kValue;\r\n      while (k < len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Soit putStatus égal à Put(A, \"length\", len, true).\r\n      A.length = len; // 20. On renvoie A.\r\n      return A;\r\n    };\r\n  })();\r\n}\r\n// Element.closest\r\nif (window.Element && !Element.prototype.closest) {\r\n  Element.prototype.closest = function(s) {\r\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i,\r\n      el = this;\r\n    do {\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== el) {}\r\n    } while (i < 0 && (el = el.parentElement));\r\n    return el;\r\n  };\r\n}\r\n","const mousewheelevt = /Firefox/i.test(navigator.userAgent) ? 'DOMMouseScroll' : 'mousewheel';\r\nconst scrollSpeed = 20;\r\n\r\nconst scrollHorizontal = function(el) {\r\n  let scroll = 0;\r\n\r\n  const contentEl = el.querySelector('.content');\r\n  const itemLast = contentEl.children[contentEl.children.length - 1];\r\n  const scrollMax = itemLast.offsetLeft + itemLast.offsetWidth - contentEl.offsetLeft - contentEl.offsetWidth;\r\n\r\n  contentEl.addEventListener(mousewheelevt, function(e) {\r\n    e.preventDefault();\r\n\r\n    const diffScroll = contentEl.scrollLeft - scroll;\r\n\r\n    if (Math.abs(diffScroll) > scrollSpeed) {\r\n      scroll = contentEl.scrollLeft;\r\n    }\r\n\r\n    if((e.wheelDelta || e.detail) > 0) {\r\n      if (scroll >= 0) scroll -= scrollSpeed;\r\n    } else {\r\n      if (scroll <= scrollMax) scroll += scrollSpeed;\r\n    }\r\n\r\n    contentEl.scrollLeft = scroll;\r\n  })\r\n}\r\n\r\nexport default scrollHorizontal;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXGpzXFxjb21wb25lbnRzXFxhcHBiYXIuanMiLCJzcmNcXGpzXFxjb21wb25lbnRzXFxpbmRleC5qcyIsInNyY1xcanNcXGNvbXBvbmVudHNcXHNlY3Rpb25UYWJzLmpzIiwic3JjXFxqc1xcaW5kZXguanMiLCJzcmNcXGpzXFxwb2x5ZmlsbC5qcyIsInNyY1xcanNcXHNjcm9sbEhvcml6b250YWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sT0FBTyxNQUFNLElBQU4sQ0FBVyxTQUFTLGdCQUFULENBQTBCLHdCQUExQixDQUFYLENBQWI7O0FBRUEsS0FBSyxPQUFMLENBQWE7QUFBQSxTQUNYLElBQUksZ0JBQUosQ0FBcUIsT0FBckIsRUFBOEIsWUFBVztBQUN2QyxTQUFLLE9BQUwsQ0FBYSxTQUFiLEVBQXdCLFNBQXhCLENBQWtDLE1BQWxDLENBQXlDLElBQXpDO0FBQ0QsR0FGRCxDQURXO0FBQUEsQ0FBYjs7Ozs7QUNGQTs7QUFDQTs7Ozs7QUNEQTs7Ozs7O0FBRUEsSUFBTSxVQUFVLE1BQU0sSUFBTixDQUFXLFNBQVMsZ0JBQVQsQ0FBMEIsNkJBQTFCLENBQVgsQ0FBaEI7QUFDQSxJQUFNLGNBQWMsTUFBTSxJQUFOLENBQVcsU0FBUyxnQkFBVCxDQUEwQixlQUExQixDQUFYLENBQXBCO0FBQ0EsSUFBTSxpQkFBaUIsTUFBTSxJQUFOLENBQ3JCLFNBQVMsZ0JBQVQsQ0FBMEIsK0JBQTFCLENBRHFCLENBQXZCOztBQUlBLFFBQVEsT0FBUixDQUFnQjtBQUFBLFNBQ2QsSUFBSSxnQkFBSixDQUFxQixPQUFyQixFQUE4QixVQUFTLENBQVQsRUFBWTtBQUN4QyxNQUFFLGNBQUY7QUFDQSxRQUFNLGVBQWUsS0FBSyxPQUFMLENBQWEsZUFBYixDQUFyQjtBQUNBLFFBQU0sUUFBUSxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQWQ7QUFDQSxRQUFNLFlB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VUFBSSxVQUFVLENBQWQsRUFBaUIsVUFBVSxXQUFWO0FBQ2xCLEtBRkQsTUFFTztBQUNMLFVBQUksVUFBVSxTQUFkLEVBQXlCLFVBQVUsV0FBVjtBQUMxQjs7QUFFRCxjQUFVLFVBQVYsR0FBdUIsTUFBdkI7QUFDRCxHQWhCRDtBQWlCRCxDQXhCRDs7a0JBMEJlLGdCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImNvbnN0IGJ0bnMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXRvZ2dsZT1cImFwcGJhclwiXScpKTtcclxuXHJcbmJ0bnMuZm9yRWFjaChidG4gPT4gXHJcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICB0aGlzLmNsb3Nlc3QoJy5hcHBiYXInKS5jbGFzc0xpc3QudG9nZ2xlKCdpbicpXHJcbiAgfSlcclxuKSIsImltcG9ydCAnLi9hcHBiYXInXHJcbmltcG9ydCAnLi9zZWN0aW9uVGFicyciLCJpbXBvcnQgc2Nyb2xsSG9yaXpvbnRhbCBmcm9tICcuLi9zY3JvbGxIb3Jpem9udGFsJztcclxuXHJcbmNvbnN0IHRhYk5hdnMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWN0aW9uLXRhYnMgLm5hdiA+IGxpID4gYScpKVxyXG5jb25zdCBzZWN0aW9uVGFicyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlY3Rpb24tdGFicycpKTtcclxuY29uc3Qgc2VjdGlvbnNBY3RpdmUgPSBBcnJheS5mcm9tKFxyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWN0aW9uLXRhYnMgLnNlY3Rpb24uYWN0aXZlJylcclxuKVxyXG5cclxudGFiTmF2cy5mb3JFYWNoKG5hdiA9PlxyXG4gIG5hdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHNlY3Rpb25UYWJFbCA9IHRoaXMuY2xvc2VzdCgnLnNlY3Rpb24tdGFicycpO1xyXG4gICAgY29uc3QgbmF2RWwgPSB0aGlzLmNsb3Nlc3QoJy5uYXYnKTtcclxuICAgIGNvbnN0IHNlY3Rpb25JZCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJyk7XHJcbiAgICBjb25zdCBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XHJcbiAgICBjb25zdCBpc0FjdGl2ZSA9IHBhcmVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpO1xyXG4gICAgY29uc3Qgc2VjdGlvbkVsID0gc2VjdGlvblRhYkVsLnF1ZXJ5U2VsZWN0b3Ioc2VjdGlvbklkKTtcclxuXHJcbiAgICBpZiAoaXNBY3RpdmUpIHJldHVybjtcclxuXHJcbiAgICBzZWN0aW9uVGFiRWwucXVlcnlTZWxlY3RvcignLmNvbnRlbnQgLmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgbmF2RWwucXVlcnlTZWxlY3RvcignLmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG5cclxuICAgIHNlY3Rpb25FbC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgIHBhcmVudC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgIHNjcm9sbFRvU2VjdGlvbkFjdGl2ZShzZWN0aW9uRWwpO1xyXG4gIH0pXHJcbik7XHJcblxyXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcbiAgc2VjdGlvbnNBY3RpdmUuZm9yRWFjaChzY3JvbGxUb1NlY3Rpb25BY3RpdmUpO1xyXG4gIHNlY3Rpb25UYWJzLmZvckVhY2goc2Nyb2xsSG9yaXpvbnRhbCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNjcm9sbFRvU2VjdGlvbkFjdGl2ZShzZWN0aW9uRWwpIHtcclxuICBjb25zdCBjb250ZW50RWwgPSBzZWN0aW9uRWwuY2xvc2VzdCgnLmNvbnRlbnQnKTtcclxuXHJcbiAgaWYgKCdzY3JvbGxUbycgaW4gd2luZG93KSB7XHJcbiAgICBjb250ZW50RWwuc2Nyb2xsVG8oe1xyXG4gICAgICAnYmVoYXZpb3InOiAnc21vb3RoJyxcclxuICAgICAgJ2xlZnQnOiBzZWN0aW9uRWwub2Zmc2V0TGVmdFxyXG4gICAgfSlcclxuICB9IGVsc2Uge1xyXG4gICAgY29udGVudEVsLnNjcm9sbExlZnQgPSBzZWN0aW9uRWwub2Zmc2V0TGVmdDtcclxuICB9XHJcbn0iLCJpbXBvcnQgJy4vcG9seWZpbGwnXHJcblxyXG5pbXBvcnQgJy4vY29tcG9uZW50cyciLCIvLyBBcnJheS5mcm9tXHJcbmlmICghQXJyYXkuZnJvbSkge1xyXG4gIEFycmF5LmZyb20gPSAoZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xyXG4gICAgdmFyIGlzQ2FsbGFibGUgPSBmdW5jdGlvbihmbikge1xyXG4gICAgICByZXR1cm4gdHlwZW9mIGZuID09PSAnZnVuY3Rpb24nIHx8IHRvU3RyLmNhbGwoZm4pID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xyXG4gICAgfTtcclxuICAgIHZhciB0b0ludGVnZXIgPSBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICB2YXIgbnVtYmVyID0gTnVtYmVyKHZhbHVlKTtcclxuICAgICAgaWYgKGlzTmFOKG51bWJlcikpIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgICAgfVxyXG4gICAgICBpZiAobnVtYmVyID09PSAwIHx8ICFpc0Zpbml0ZShudW1iZXIpKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bWJlcjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gKG51bWJlciA+IDAgPyAxIDogLTEpICogTWF0aC5mbG9vcihNYXRoLmFicyhudW1iZXIpKTtcclxuICAgIH07XHJcbiAgICB2YXIgbWF4U2FmZUludGVnZXIgPSBNYXRoLnBvdygyLCA1MykgLSAxO1xyXG4gICAgdmFyIHRvTGVuZ3RoID0gZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgdmFyIGxlbiA9IHRvSW50ZWdlcih2YWx1ZSk7XHJcbiAgICAgIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChsZW4sIDApLCBtYXhTYWZlSW50ZWdlcik7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIExhIHByb3ByacOpdMOpIGxlbmd0aCBkZSBsYSBtw6l0aG9kZSB2YXV0IDEuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyosIG1hcEZuLCB0aGlzQXJnICovKSB7XHJcbiAgICAgIC8vIDEuIFNvaXQgQywgbGEgdmFsZXVyIHRoaXNcclxuICAgICAgdmFyIEMgPSB0aGlzO1xyXG5cclxuICAgICAgLy8gMi4gU29pdCBpdGVtcyBsZSBUb09iamVjdChhcnJheUxpa2UpLlxyXG4gICAgICB2YXIgaXRlbXMgPSBPYmplY3QoYXJyYXlMaWtlKTtcclxuXHJcbiAgICAgIC8vIDMuIFJldHVybklmQWJydXB0KGl0ZW1zKS5cclxuICAgICAgaWYgKGFycmF5TGlrZSA9PSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcclxuICAgICAgICAgICdBcnJheS5mcm9tIGRvaXQgdXRpbGlzZXIgdW4gb2JqZXQgc2VtYmxhYmxlIMOgIHVuIHRhYmxlYXUgLSBudWxsIG91IHVuZGVmaW5lZCBuZSBwZXV2ZW50IHBhcyDDqnRyZSB1dGlsaXPDqXMnXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gNC4gU2kgbWFwZm4gZXN0IHVuZGVmaW5lZCwgbGUgbWFwcGluZyBzZXJhIGZhbHNlLlxyXG4gICAgICB2YXIgbWFwRm4gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHZvaWQgdW5kZWZpbmVkO1xyXG4gICAgICB2YXIgVDtcclxuICAgICAgaWYgKHR5cGVvZiBtYXBGbiAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAvLyA1LiBzaW5vblxyXG4gICAgICAgIC8vIDUuIGEuIHNpIElzQ2FsbGFibGUobWFwZm4pIGVzdCBmYWxzZSwgb24gbMOodmUgdW5lIFR5cGVFcnJvci5cclxuICAgICAgICBpZiAoIWlzQ2FsbGFibGUobWFwRm4pKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcnJheS5mcm9tOiBsb3JzcXUgaWwgZXN0IHV0aWxpc8OpIGxlIGRldXhpw6htZSBhcmd1bWVudCBkb2l0IMOqdHJlIHVuZSBmb25jdGlvbicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gNS4gYi4gc2kgdGhpc0FyZyBhIMOpdMOpIGZvdXJuaSwgVCBzZXJhIHRoaXNBcmcgOyBzaW5vbiBUIHNlcmEgdW5kZWZpbmVkLlxyXG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMikge1xyXG4gICAgICAgICAgVCA9IGFyZ3VtZW50c1syXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIDEwLiBTb2l0IGxlblZhbHVlIHBvdXIgR2V0KGl0ZW1zLCBcImxlbmd0aFwiKS5cclxuICAgICAgLy8gMTEuIFNvaXQgbGVuIHBvdXIgVG9MZW5ndGgobGVuVmFsdWUpLlxyXG4gICAgICB2YXIgbGVuID0gdG9MZW5ndGgoaXRlbXMubGVuZ3RoKTtcclxuXHJcbiAgICAgIC8vIDEzLiBTaSBJc0NvbnN0cnVjdG9yKEMpIHZhdXQgdHJ1ZSwgYWxvcnNcclxuICAgICAgLy8gMTMuIGEuIFNvaXQgQSBsZSByw6lzdWx0YXQgZGUgbCdhcHBlbCDDoCBsYSBtw6l0aG9kZSBpbnRlcm5lIFtbQ29uc3RydWN0XV0gYXZlYyB1bmUgbGlzdGUgZW4gYXJndW1lbnQgcXVpIGNvbnRpZW50IGwnw6lsw6ltZW50IGxlbi5cclxuICAgICAgLy8gMTQuIGEuIFNpbm9uLCBzb2l0IEEgbGUgcsOpc3VsdGF0IGRlIEFycmF5Q3JlYXRlKGxlbikuXHJcbiAgICAgIHZhciBBID0gaXNDYWxsYWJsZShDKSA/IE9iamVjdChuZXcgQyhsZW4pKSA6IG5ldyBBcnJheShsZW4pO1xyXG5cclxuICAgICAgLy8gMTYuIFNvaXQgayDDqWdhbCDDoCAwLlxyXG4gICAgICB2YXIgayA9IDA7IC8vIDE3LiBPbiByw6lww6h0ZSB0YW50IHF1ZSBrIDwgbGVu4oCmXHJcbiAgICAgIHZhciBrVmFsdWU7XHJcbiAgICAgIHdoaWxlIChrIDwgbGVuKSB7XHJcbiAgICAgICAga1ZhbHVlID0gaXRlbXNba107XHJcbiAgICAgICAgaWYgKG1hcEZuKSB7XHJcbiAgICAgICAgICBBW2tdID0gdHlwZW9mIFQgPT09ICd1bmRlZmluZWQnID8gbWFwRm4oa1ZhbHVlLCBrKSA6IG1hcEZuLmNhbGwoVCwga1ZhbHVlLCBrKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgQVtrXSA9IGtWYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgayArPSAxO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIDE4LiBTb2l0IHB1dFN0YXR1cyDDqWdhbCDDoCBQdXQoQSwgXCJsZW5ndGhcIiwgbGVuLCB0cnVlKS5cclxuICAgICAgQS5sZW5ndGggPSBsZW47IC8vIDIwLiBPbiByZW52b2llIEEuXHJcbiAgICAgIHJldHVybiBBO1xyXG4gICAgfTtcclxuICB9KSgpO1xyXG59XHJcbi8vIEVsZW1lbnQuY2xvc2VzdFxyXG5pZiAod2luZG93LkVsZW1lbnQgJiYgIUVsZW1lbnQucHJvdG90eXBlLmNsb3Nlc3QpIHtcclxuICBFbGVtZW50LnByb3RvdHlwZS5jbG9zZXN0ID0gZnVuY3Rpb24ocykge1xyXG4gICAgdmFyIG1hdGNoZXMgPSAodGhpcy5kb2N1bWVudCB8fCB0aGlzLm93bmVyRG9jdW1lbnQpLnF1ZXJ5U2VsZWN0b3JBbGwocyksXHJcbiAgICAgIGksXHJcbiAgICAgIGVsID0gdGhpcztcclxuICAgIGRvIHtcclxuICAgICAgaSA9IG1hdGNoZXMubGVuZ3RoO1xyXG4gICAgICB3aGlsZSAoLS1pID49IDAgJiYgbWF0Y2hlcy5pdGVtKGkpICE9PSBlbCkge31cclxuICAgIH0gd2hpbGUgKGkgPCAwICYmIChlbCA9IGVsLnBhcmVudEVsZW1lbnQpKTtcclxuICAgIHJldHVybiBlbDtcclxuICB9O1xyXG59XHJcbiIsImNvbnN0IG1vdXNld2hlZWxldnQgPSAvRmlyZWZveC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkgPyAnRE9NTW91c2VTY3JvbGwnIDogJ21vdXNld2hlZWwnO1xyXG5jb25zdCBzY3JvbGxTcGVlZCA9IDIwO1xyXG5cclxuY29uc3Qgc2Nyb2xsSG9yaXpvbnRhbCA9IGZ1bmN0aW9uKGVsKSB7XHJcbiAgbGV0IHNjcm9sbCA9IDA7XHJcblxyXG4gIGNvbnN0IGNvbnRlbnRFbCA9IGVsLnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50Jyk7XHJcbiAgY29uc3QgaXRlbUxhc3QgPSBjb250ZW50RWwuY2hpbGRyZW5bY29udGVudEVsLmNoaWxkcmVuLmxlbmd0aCAtIDFdO1xyXG4gIGNvbnN0IHNjcm9sbE1heCA9IGl0ZW1MYXN0Lm9mZnNldExlZnQgKyBpdGVtTGFzdC5vZmZzZXRXaWR0aCAtIGNvbnRlbnRFbC5vZmZzZXRMZWZ0IC0gY29udGVudEVsLm9mZnNldFdpZHRoO1xyXG5cclxuICBjb250ZW50RWwuYWRkRXZlbnRMaXN0ZW5lcihtb3VzZXdoZWVsZXZ0LCBmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgY29uc3QgZGlmZlNjcm9sbCA9IGNvbnRlbnRFbC5zY3JvbGxMZWZ0IC0gc2Nyb2xsO1xyXG5cclxuICAgIGlmIChNYXRoLmFicyhkaWZmU2Nyb2xsKSA+IHNjcm9sbFNwZWVkKSB7XHJcbiAgICAgIHNjcm9sbCA9IGNvbnRlbnRFbC5zY3JvbGxMZWZ0O1xyXG4gICAgfVxyXG5cclxuICAgIGlmKChlLndoZWVsRGVsdGEgfHwgZS5kZXRhaWwpID4gMCkge1xyXG4gICAgICBpZiAoc2Nyb2xsID49IDApIHNjcm9sbCAtPSBzY3JvbGxTcGVlZDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChzY3JvbGwgPD0gc2Nyb2xsTWF4KSBzY3JvbGwgKz0gc2Nyb2xsU3BlZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgY29udGVudEVsLnNjcm9sbExlZnQgPSBzY3JvbGw7XHJcbiAgfSlcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2Nyb2xsSG9yaXpvbnRhbDsiXX0="}